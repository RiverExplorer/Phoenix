<!-- Copyright 2025 RiverExplorer LLC and Douglas Mark Royer -->
<section xmlns:xi="http://www.w3.org/2001/XInclude">
	<name>Administration Commands</name>
	
	<t>
		Implementations are not required to implement any ADMIN command.
		A client will know the server supports one or more ADMIN
		commands when it gets a CAPABILITY_POST with an ADMIN capability
		in it, from the server.
	</t>
	<t>
		Administrative command can be used to configure, audit, and manage
		the remote endpoint.
		Administrative command can be used to configure, audit, and manage
		user access for the server implementation.
	</t>

	<section>
		<name>Administration Capability Definitions</name>
		<t>
			Implementations MUST NOT send any ADMIN capability
			in the CAPABILITY_PRE list.
		</t>
		<t>
			Implementations that support any administration command
			will include an ADMIN capability in the CAPABILITY_POST list.
			An implementation may decide that only specified and
			authorized users may issue administrative commands and
			send only those authenticated users an ADMIN capability.
		</t>
		<t>
			The ADMIN capability includes the list of ADMIN commands the user is
			allowed to perform.
			For example, if a user only has permission to only view user lists, then
			only the USER_LIST ADMIN capability will be provided.
		</t>
		<t>
			The capability name is also the command name to use
			when invoking that capability.
		</t>
		<t>
			When a user attempts to send a commmand they are not authorized
			to send, the remote endpoint will reply with a NOT_SUPPORTED command
			with its sequence number set to the sequence number from offending
			command.
		</t>
	</section>

	<section>
		<name>Administration Command Payload</name>
		<t>
			To simplify naming, the capability names and command/reply names
			are the same.
		</t>
		<t>
			The following operations are defined for administration.
			Each is part of an ADMIN command or ADMIN reply.
			They each have a unique identifier, called an ADMIN Operation ID (AOID).
		</t>
		<t>
			All of their XDR API is: xdr_AOID().
		</t>
		<table>
			<name>Administration Comamnd Payload Operations</name>
			<thead>
				<tr>
					<th>Command and Capability Name</th>
					<th>AOID</th>
					<th>Capability Description.</th>
					<th>Command Description.</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>AOID</td>
					<td>uint32_t</td>
					<td>
						An Administrative Operation Identifier.
					</td>
					<td>
						Holds the (VENDOR_BIT or PHOENIX_BIT) value
						and one of SERVER_CONFIGURE, SERVER_KICK_USER,
						SERVER_LOGS, SERVER_MANAGE_BANS, SERVER_SHUTDOWN,
						SERVER_VIEW_STATA, USER_CREATE, USER_CREATE, USER_DELETE,
						USER_LIST, USER_PERMISSIONS, USER_RENAME
					</td>
				</tr>
				<tr>
					<td>SERVER_CONFIGURE</td>
					<td>%x05:8</td>
					<td>
						May configure the server. If sent with a VIEW_ONLY
						parameter, then the user may only view the configuration
						information.
					</td>
					<td>
						The command to view and alter the server configuration
						information.
					</td>
				</tr>
				<tr>
					<td>SERVER_KICK_USER</td>
					<td>%x06:8</td>
					<td>
						May logout a user. And limit when they can use the server again.
					</td>
					<td>
						The command to kick and limit a user.
					</td>
				</tr>
				<tr>
					<td>SERVER_LOGS</td>
					<td>%x07:8</td>
					<td>
						May view the server logs.
					</td>
					<td>
						The command to view server logs.
					</td>
				</tr>
				<tr>
					<td>SERVER_MANAGE_BANS</td>
					<td>%x08:8</td>
					<td>
						May manage IP and user bans.
					</td>
					<td>
						The command to manage ban users and IP addresses.
					</td>
				</tr>
				<tr>
					<td>SERVER_SHUTDOWN</td>
					<td>%x09:8</td>
					<td>
						May shutdown the server.
					</td>
					<td>
						The command to shutdown the server.
					</td>
				</tr>
				<tr>
					<td>SERVER_VIEW_STATS</td>
					<td>%x0a:8</td>
					<td>
						May view server statistics.
					</td>
					<td>
						The command to view statistics.
					</td>
				</tr>
				<tr>
					<td>USER_CREATE</td>
					<td>%x0b:8</td>
					<td>
						May create a new user.
					</td>
					<td>
						The command to create a Phoenix server user.
					</td>
				</tr>
				<tr>
					<td>USER_DELETE</td>
					<td>%x0c:8</td>
					<td>
						May delete a user.
					</td>
					<td>
						The command to delete a user.
					</td>
				</tr>
				<tr>
					<td>USER_LIST</td>
					<td>%x0d:8</td>
					<td>
						May list users and their capabilities.
					</td>
					<td>
						The command to list users.
					</td>
				</tr>
				<tr>
					<td>USER_PERMISSIONS</td>
					<td>%x0e:8</td>
					<td>
						May update other users permissions.
					</td>
					<td>
						The command to view and set user permissions.
					</td>
				</tr>
				<tr>
					<td>USER_RENAME</td>
					<td>%x0f:8</td>
					<td>
						May rename a user.
					</td>
					<td>	
						The command to rename a user.
					</td>
				</tr>
			</tbody>
		</table>

		<section>
			<name>Administration Command Payload - Operations - ABNF</name>
			<figure>
				<name>Administration Command Payload - Operations - ABNF</name>
				<xi:include href="include/05-AdministrationOperations-ABNF.xml"/>
			</figure>
		</section>
		
		<section>
			<name>Administration Command Payload - Operations - XDR</name>
			<figure>
				<name>Administration Command Payload - Operations - XDR</name>
				<xi:include href="include/05-1-AOID-XDR.xml"/>
				<xi:include href="include/05-2-AdministrationOperations-XDR.xml"/>
			</figure>
		</section>
	</section>
		
	<xi:include href="ServerConfigure.xml"/>
	<xi:include href="ServerKickUser.xml"/>
	<xi:include href="ServerLogs.xml"/>
	<xi:include href="ServerManageBans.xml"/>
	<xi:include href="ServerShutdown.xml"/>
	<xi:include href="ServerViewStats.xml"/>
	<xi:include href="UserCreate.xml"/>
	<xi:include href="UserDelete.xml"/>
	<xi:include href="UserList.xml"/>
	<xi:include href="UserPermissions.xml"/>
	<xi:include href="UserRename.xml"/>

</section>
