<section anchor="INDEX">
	<name>Index</name>

	<section anchor="InterestedHeaders">
		<name>Interested Headers</name>
		<t>
			Some implementation may wish to specify which MIME headers
			it wants to get in the index supplied by the server.
			This is done as part of the folder selection command which
			can supplies a list of desired headers.
			Or it can specify a list ID that has already been transmitted.
			When none are supplied, no header index values will be returned.
		</t>
		<t>
			This list can be the same for all folders, or unique to specific folders.
			The client generates a list of interested headers and
			sends an InterestedHeaders list to the server when selecting
			a folder.
		</t>
		<t>
			A request ID (HIDX) is an 8-bit unsigned integer in network byte order.
		</t>
		<t>
			A Header ID is an 8-bit unsigned integer in network byte order.
		</t>
		<t>
			There are three (3) types of interested header index (HIDX) requests.
			These are 8-bit unsigned integer in network byte order.
			And the HIDX values are:
		</t>
		<ul>
			<li>
				<t>
					HIDX = 0
				</t>
				<t>
					Used to set the default MIME object and Body Part list
					of interesting headers the client cares about.
					The default list has a list ID that is also zero (0).
				</t>
				<t>
					And requesting a list ID of zero (0) will return the index
					of the default headers defined by the client that was set.
				</t>
			</li>
			<li>
				<t>
					HIDX = 1
				</t>
				<t>
					This value sets a custom list that can be used later by ID.
					Custom lists have an ID greater than zero (>0)
				</t>
			</li>
			<li>
				<t>
					HIDX = 2
				</t>
				<t>
					This value is used to get the header list index.
				</t>
			</li>
		</ul>
		<t>
			The header for setting a list is shown
			in <xref target="Interisting-S0-01"/>, where:
		</t>
		<ul>
			<li>
				<t>
					HIDX is used to set or get the headers the client
					wishes the server to index in MIME objects.
					It must be a zero (0), one (1), or two (2).
				</t>
			</li>
			<li>
				<t>
					LID is the list ID of the list. An 8-bit value.
					Zero (0) is the default list.
				</t>
			</li>
			<li>
				<t>
					HdrCnt set to the number of headers the client wants
					in the list.
					This is an 8-bit value from 0 to 254 with 255 reserved for expanson.
				</t>
				<t>
					This is a 32-bit unsigned integer in network byte order.
				</t>
			</li>
		</ul>
		<figure anchor="Interisting-S0-01" align="center">
			<name>Setting the Intrest List - Header</name>
			<artset>
				<artwork type="ascii-art" src="IndexList-01.txt"/>
				<artwork type="svg" src="IndexList-01.svg"/>
			</artset>
		</figure>
		<t>
			Followed by the header request information.
			One sent for each unique header to be placed into the header index.
			As shown in  <xref target="Interisting-S0-02"/>, where:
		</t>
		<ul>
			<li>
				<t>
					HID is the client assigned unique header ID
					for the named header.
					This is an 8-bit unsigned integer.
				</t>
			</li>
			<li>
				<t>
					STRING LENGTH is the octet count of the string.
					Any terminating zero (0) is not counted.
				</t>
				<t>
					This is a 24-bit unsigned integer in network byte order.
				</t>
			</li>
			<li>
				<t>
					THE HEADER NAME is the characters that make
					up the MIME header name	that is interesting
					without including any terminating zero (0).
					These are a sequence of 8-bit unsigned integer values
					in network byte order.
				</t>
			</li>
		</ul>

		<figure anchor="Interisting-S0-02" align="center">
			<name>Setting the Intrest List - Contents</name>
			<artset>
				<artwork type="ascii-art" src="IndexList-02.txt"/>
				<artwork type="svg" src="IndexList-02.svg"/>
			</artset>
		</figure>
		<t>
			When the HIDX flag is set to two (2) then it is followed by a list
		</t>
		<t>
			LID, the list ID of an already transmitted list to be used.
			Zero (0) for the already defined and transmitted default list.
			Or the LID of another already defined and transmitted non-default list.
		</t>
		<t>
			This is sent as a 32-bit unsigned integer in network byte order.
		</t>
		<figure anchor="Interisting-S0-03" align="center">
			<name>Requesting Header Index by List ID (LID)</name>
			<artset>
				<artwork type="ascii-art" src="IndexList-03.txt"/>
				<artwork type="svg" src="IndexList-03.svg"/>
			</artset>
		</figure>
		<t>
			Restrictions:
		</t>
		<ul>
			<li>
				Only one default list can be set at a time.
				It can change by sending a new default list.
			</li>
			<li>
				List ID zero (0) is reserved for the default list.
			</li>
			<li>
				The list IDs are unique to the connection and do not persist
				across connections.
			</li>
			<li>
				No two lists can have the same ID during a connection.
			</li>
		</ul>
		<t>
		</t>
		<section>
			<name>Client Interested Headers Examples</name>
			<t>
				This is an example of the client sending the default
				interesting header list to the server.
				The client is asking for the index values
				for the following MIME headers (1) From, and (2) Subject.
				And for the following Body part headers (1) Content-Type.
			</t>
			<figure anchor="Interisting-S0-04" align="center">
				<name>Example Setting Default List</name>
				<artset>
					<artwork type="ascii-art" src="IndexList-04.txt"/>
					<artwork type="svg" src="IndexList-04.svg"/>
				</artset>
			</figure>
			<t>
				Where:
			</t>
			<ul>
				<li>
					(a) Not used zero (0), HIDX, LID, Two headers follow
					An HIDX of zero (0) means we are setting the default
					MIME object header list.
				</li>
				<li>
					(b) This first header will be identified as zero (0).
					The first header is four (4) octets in length: 'From'.
				</li>
				<li>
					(c) The value of the characters for 'From'.
				</li>
				<li>
					(d) The second header will be identified as one (1).
					The second header is seven (7) octets in length: 'Subject'.
				</li>
				<li>
					(e) The value of the characters for 'Subject'.
				</li>
				<li>
					(f) The two MIME objects headers are done, start of Body Part headers.
					and there is one (1) of them.
					HIDX and LID are not used here.
				</li>
				<li>
					(g) The second header will be identified as three (3).
					The first body part header is 12 octets long (0xc): 'Content-Type'.
				</li>
				<li>
					(h) The value of the characters for 'Content-Type'.
				</li>
				<li>
					(i) The reast of the value of the characters for 'Content-Type'.
				</li>
			</ul>
		</section>
	</section>

	<section>
		<name>MIME Folder Index</name>
		<t>
			In this specification, a MIME folder is also called a folder.
			And can be files containing MIME objects on a disk that have a defined order,
			or sequence of MIME objects in one file.
		</t>
		<t>
			A folder index is a summary of the contents of a MIME folder.
			It includes the basic header information and the specific location
			of body parts for each MIME message in the folder.
			The location information is the octet count to the start of the
			beginning of the related target data.
		</t>
		<ul>
			<li>
				An index is an unsigned 32-bit integer in network byte order.
			</li>
			<li>
				A length is an unsigned 32-bit integer in network byte order.
			</li>
		</ul>
		<t>
			For example, if a MIME folder contains 100 MIME messages, then
			the folder index will have 100 message indexes.
			Each message will have header indexes for the requested headers.
			Each message index will	contain 1 or more body part indexes.
			Each body part will have header indexes with zero (0) or more entries.
		</t>
		<t>
			This protocol references the strings by octet offset into the entire
			message.
			All strings can be referenced by using a total of 8 octets.
			A Phoenix string consists of two parts:
		</t>
		<ol>
			<li>
				The octet count to the start of the string with zero being the
				first octet in the message.
			</li>
			<li>
				The length in octets of the string.
			</li> 
		</ol>
		<t>
			A Phoenix string over the wire is 8 octets in size.
			
		</t>
		<artset>
			<artwork type="ascii-art">
				+----------------------------------+
				| OFFSET                           |
				+----------------------------------+
				| LENGTH                           |
				+----------------------------------+
				| payload.....
			</artwork>
		</artset>
		<t>
			A folder index consists of:
		</t>
		<ul>
			<li>
				The entire length of the index as a 32-bit unsigned
				integer in network byte order of what follows this value.
				Allowing the recipient of this index to do one read
				and process later.
			</li>
			<li>
				The number of message indexes in this folder index.
				As an unsigned 32-bit integer in network byte order.
			</li>
		</ul>
		<t>
			The index header is 8 octets:
		</t>
		<artset>
			<artwork type="ascii-art">
				+----------------------------------+
				| LENGTH                           |
				+----------------------------------+
				| MESSAGE COUNT                    |
				+----------------------------------+
				| payload.....
			</artwork>
		</artset>
		<t>
			Next is an array of message indexes.
			They are an ordered list of references to each message.
			In the order they appear in the folder:
		</t>
		<ul>
			<li>
				A 32-bit unsigned integer in network byte order that is
				the offset in the folder to the message.
				An offset is unique in a MIME folder, it is used both as
				an offset into the MIME folder,
				and as a unique ID within a MIME folder.
			</li>
			<li>
				An a length of the message as a 32-bit unsigned integer
				in network byte order.
			</li>
		</ul>
		<artset>
			<artwork type="ascii-art">
				+----------------------------------+
				|    32-bit unsigned OFFSET        |
				+----------------------------------+
				|    32-bit unsigned LENGTH        |
				+----------------------------------+
				| Array of header index ..... 
				...

			</artwork>
		</artset>
		<t>
			For each message index is an ordered list of interested headers.
			The interested header list is assignable by the client and body
			part indexes.
			It consists of offsets to the interested headers and associated value.
			Each interested header can be indexed with nine (9) octets.
			and consists of:
		</t>
		<ul>
			<li>
				The clients assigned unique header ID for the interested header name.
				This is an unsigned 32-bit integer in network byte order.
				Leaving the client to ask for the index of 254 unique header names.
			</li>
			<li>
				A Phoenix string referencing the header value.
				And as it is unique in a MIME object, the offset is used both as
				an offset, and as a unique ID within a MIME object.
			</li>
			<li>
				An unsigned 32-bit integer in network byte order of the number
				of body parts in this message.
				Any MIME preamble and epilogue are not counted as body parts
				A preamble, if it exists, can be easily be calculated as it starts as the
				first	octet after the header area.
				And the epilogue, if it exists, can be calculated as starting as the first
				octet after the last MIME boundary.
				And as it offset is unique in a MIME object, the offset is used both as
				an offset, and as a unique ID within a MIME object.
			</li>
		</ul>

	</section>
</section>
