<?xml version="1.0" encoding="utf-8"?>
<?xml-model href="rfc7991bis.rnc"?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- This third-party XSLT can be enabled for direct transformations in XML processors, including most browsers -->
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<!-- If further character entities are required then they should be added to the DOCTYPE above.
     Use of an external entity file is not recommended. -->

<rfc
  xmlns:xi="http://www.w3.org/2001/XInclude"
  category="info"
  docName="draft-royer-bits-in-abnf-00"
  ipr="trust200902"
  obsoletes=""
  updates=""
  submissionType="IETF"
  xml:lang="en"
  version="3">
  <front>
    <title abbrev="Abbreviated Title">Bits in ABNF</title>
    <seriesInfo name="Internet-Draft" value="draft-royer-bits-in-abnf-00"/>
   
    <author fullname="Doug Royer" initials="DM" surname="Royer">
      <organization>RiverExplorer LLC</organization>
      <address>
        <postal>
          <!-- Reorder these if your country does things differently -->
          <street>848 N. Rainbow Blvd, Ste-1120</street>
          <city>Las Vegas</city>
          <region>Nevada</region>
          <code>89107</code>
          <country>US</country>
          <!-- Uses two letter country code -->
        </postal>        
        <phone>+1-208-806-1358</phone>
        <email>DouglasRoyer@gmail.com</email>  
        <!-- Can have more than one <email> element -->
        <uri>https://DougRoyer.US</uri>
      </address>
    </author>
   
    <date year="2025"/>
    <area>General</area>
    <workgroup>Internet Engineering Task Force</workgroup>
    <keyword>ABNF</keyword>
    <keyword>XDR</keyword>
    <keyword>bit</keyword>
    <abstract>
      <t>
				This is an extension to the ABNF specification to allow
				for bits definitions to be defined.
			</t>
			<t>
				When interacting with hardware or bit oriented
				over the wire protocols ABNF is not currently the choice.
				This specification describes a method to
				add boolean and narrow bit values in order to fix
				that limitation.
			</t>
			<t>
				And this note while in in draft status: A new Open Source
				XDR <xref target="RFC4506"/> and ABNF generation tool is
				being developed	<xref target="xdrgen"/> which generates
				code from ABNF and XDR.
				It can also generate ABNF from XDR.
				And it can generate XDR from ABNF.
				Both also can produce C++ source and header files.
			</t>
    </abstract>
  </front>

  <middle>
    <section>
      <name>Introduction</name>
			<t>
				This specification adds to
				<xref target="RFC5234" section="2.3" sectionFormat="comma"/>
				Terminal values by adding an optional
				bit width to the binary, decimal, and hexadecimal terminals:
			</t>
			<ul>
				<li>
					The width is a positive integer expressed in decimal.
					This width is the number of bits in the terminal.
				</li>
				<li>
					The width must be equal to or greater than one (1).
				</li>
				<li>
					When the left side has a width then,
					the number of bits on the left of the equal sign
					must be the total of the widths on the right side
					of the equal sign.
				</li>
				<li>
					When the right side of the equal sign has widths
					and the left side does not. Then the right
					side can be a rule with a variable length.
				</li>
				<li>
					The left side only needs a width when it is
					significant and relevant to the protocol.
					A left side with no width may be present
					even when the right side is fixed with.
				</li>
				<li>
					The addition of a %p padding indicator with
					a required bit-width.
				</li>
				<li>
					An alteration of the "rulename" ABNF as
					shown in <xref target="NewTerminal"/>.
				</li>
			</ul>
			<t>
				A caution to the implementors of code generated
				from ABNF that specifies bit widths for signed
				integer values.
        Many computer languages will convert a narrower bit value
        into a wider bit value and move the sign bit to the
        most significant position.
        So when preparing a signed bit value, be sure to clamp the value
        and adjust the sign to the correct bit position before
        packing the bits.
        This would apply to signed integer values and not
				unsigned integer values.
			</t>
			<t>
				The right most elements are placed into
				the least signification part of the value.
				The left most bits being more significant
				than the bits to the right of them as
				shown in examples
				<xref target="DeviceStatus"/>
				and <xref target="EmailStatus"/>.
			</t>
			<t>
				The result are these existing definitions
				with the added optional width indicators.
			</t>
			<figure anchor="NewTerminal">
				<name>Extended ABNF Terminal Values</name>
				<artwork type="abnf" name="" align="left" alt=""><![CDATA[
ABNF
----				
				
b           = binary

b:%d        = binary with a bit width of %d

d           = decimal

d:%d        = decimal with a bit width of %d

x           = hexadecimal

x:%d        = hexadecimal with a bit width of %d.

p:%d        = pad with %d zero bits.

one-or-more = %x31-39 *(0x30-39)

rulename    = ALPHA *(ALPHA / DIGIT / "_") *(":" one-or-more)

]]></artwork>
			</figure>
			<t>
				In <xref target="DeviceStatus"/> example, "device-status"
				is 8-bits wide, and the three values to the
				right of the equal sign have a total width
				of 8-bits.
			</t>
			<figure anchor="DeviceStatus">
				<name>"device-status"</name>
				<artwork type="abnf" name="" align="left" alt=""><![CDATA[
ABNF
----				
				
device-status:8 = light-on:1 status:3 switch-position:4
]]></artwork>
			</figure>
			<artset>
				<artwork type="ascii-art">
.so Example1.txt
				</artwork>
				<artwork type="svg">
.so Example1.svg
				</artwork>
			</artset>

			<t>
				in <xref target="EmailStatus"/> "email-status" is defined to be 8-bits wide,
				and only three bits are used, so five 
				zero bits have been defined to be
				at the most significant positions.
				The total to the right of the equal sign is 8-bits:
			</t>
			<figure anchor="EmailStatus">
				<name>"email-status"</name>
			 <artwork type="abnf" name="" align="left" alt=""><![CDATA[
ABNF
----				

 email-status:8  = %p:5 seen:1 flagged:1 deleted:1
]]></artwork>
			</figure>
			<artset>
				<artwork type="ascii-art">
.so Example2.txt
				</artwork>
				<artwork type="svg">
.so Example2.svg
				</artwork>
			</artset>
			<t>
				Figure <xref target="VariableWidth"/> shows
				an example where "c-string" on the left sides has no
				predefined width	and the right side has a variable number of 8-bit
				wide values.
			</t>
			<t>
				And "collection" has no predefined with and the right
				side is set of values with various and variable widths.
			</t>
			<figure anchor="VariableWidth">
				<name>Padding in the Middle</name>
				<artwork type="abnf" name="" align="left" alt=""><![CDATA[
ABNF
----
c-string   = (ALPHA:8 / DIGIT:8 ) *(ALPHA:8 / DIGIT:8) %x00:8

collection = %p:4 header:12 c-string width:32 *(ALPHA:8)
]]></artwork>
			</figure>
			
			<t>
				The padding does not need to be at the left.
				it can be in the middle and could have many
				zero bits as shown in <xref target="Example3"/>.
			</t>
			<figure anchor="Example3">
				<name>Padding in the Middle</name>
				<artwork type="abnf" name="" align="left" alt=""><![CDATA[
ABNF
----
				
trajectory:64 = %p:18 rotation:10 %p:2 vector-x:10 %p:2
                vector-y:10 %p:2 vector-z:10
]]></artwork>
			</figure>
			<artset>
				<artwork type="ascii-art">
.so Figure4A.txt
				</artwork>
				<artwork type="svg">
.so Figure4A.svg
				</artwork>
			</artset>
			<artset>
				<artwork type="ascii-art">
.so Figure4B.txt
				</artwork>
				<artwork type="svg">
.so Figure4B.svg
				</artwork>
			</artset>
			<artset>
				<artwork type="ascii-art">
.so Figure4C.txt
				</artwork>
				<artwork type="svg">
.so Figure4C.svg
				</artwork>
			</artset>
			<artset>
				<artwork type="ascii-art">
.so Figure4D.txt
				</artwork>
				<artwork type="svg">
.so Figure4D.svg
				</artwork>
			</artset>
		</section>
		<section>
			<name>Additional Examples</name>
			<t>
				The following sets of rules are identical and valid:
			</t>
			<figure anchor="AdditionalExamples">
				<name>Comparing Rulesets.</name>
				<artwork type="abnf" name="" align="left" alt=""><![CDATA[
ABNF
----				

; Original CRLF
CRLF          = %d13.10

; Declaring CRLF is 16-bits wide.
CRLF:16       = %d13.10

; Declaring CRLF is 16-bits wide.
CRLF:16       = %d13:8.10:8

; CRLF still is 16-bits wide, but declaring it is optional.
CRLF          = %d13:8.10:8

; Original rulename
rulename      = %d97 %d98 %d99

; Declaring rulename is 24-bits wide
rulename:24   = %d97:8 %d98:8 %d99:8

; rulename still is 24-bits wide, but declaring it is optional.
rulename      = %d97:8 %d98:8 %d99:8

; Orignal DIGIT
DIGIT         = %x30-39

; Declaring DIGIT is 8-bits wide.
DIGIT:8       = %x30-39

; Declaring DIGIT is 8-bits wide.
DIGIT:8       = %x30:8-39:8

; DIGIT is still 8-bits wide, but declaring it is optional.
DIGIT         = %x30:8-39:8
]]></artwork>
			</figure>
		</section>
    <section anchor="IANA">
    <!-- All drafts are required to have an IANA considerations section. See RFC 8126 for a guide.-->
      <name>IANA Considerations</name>
      <t>This memo includes no request to IANA.</t>
    </section>
    
    <section anchor="Security">
      <!-- All drafts are required to have a security considerations section. See RFC 3552 for a guide. -->
      <name>Security Considerations</name>
      <t>This document should not affect the security of the Internet.</t>
    </section>
    
    <!-- NOTE: The Acknowledgements and Contributors sections are at the end of this template -->
  </middle>

  <back>
    <references>
      <name>Normative References</name>
      <xi:include href="References/reference.RFC.4506.xml"/>
      <xi:include href="References/reference.RFC.5234.xml"/>
    </references>

    <references>
      <name>Informative References</name>
      <reference anchor="xdrgen" target="https://github.com/RiverExplorer/Phoenix">
        <front>
          <title>XDR Code Generator, Open Source</title>
          <author initials="DM" surname="Royer">
            <organization>RiverExplorer LLC</organization>
          </author>
          <date year="2025"/>
        </front>
      </reference>
		</references>
    
    <section anchor="Acknowledgements" numbered="false">
      <name>Acknowledgments</name>
    </section>
    
    <section anchor="Contributors" numbered="false">
      <name>Contributors</name>
    </section>
    
 </back>
</rfc>
